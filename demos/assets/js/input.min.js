/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/input/input.html":
/*!*****************************************!*\
  !*** ./src/components/input/input.html ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<div \\n    class=\\\"component-container pending-init\\\"\\n    id=\\\"root-element\\\">\\n    <div class=\\\"main-wrapper\\\">\\n        <div \\n            class=\\\"icon-container leading-icon\\\"\\n            id=\\\"leading-icon-container-element\\\">\\n            <slot \\n                name=\\\"leading-icon\\\"\\n                id=\\\"leading-icon-slot\\\">\\n\\t\\t\\t</slot>\\n        </div>\\n        <div \\n            class=\\\"inner-container\\\" \\n            id=\\\"inner-container-element\\\">\\n            <div \\n                class=\\\"label-container\\\" \\n                id=\\\"label-container-element\\\">\\n                <label \\n                    for=\\\"input-element\\\" \\n                    id=\\\"label-element\\\">\\n                </label>\\n            </div>\\n            <div class=\\\"input-container\\\">\\n                <div class=\\\"input-holder\\\">\\n                    <input \\n                        type=\\\"text\\\" \\n                        name=\\\"input-element\\\"\\n                        class=\\\"input-element\\\" \\n                        id=\\\"input-element\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n        <div\\n            class=\\\"icon-container trailing-icon\\\"\\n            id=\\\"trailing-icon-container-element\\\">\\n            <slot \\n                name=\\\"trailing-icon\\\"\\n                id=\\\"trailing-icon-slot\\\">\\n\\t\\t\\t</slot>\\n        </div>\\n    </div>    \\n    <div \\n        class=\\\"hints-container\\\"\\n        id=\\\"hints-container-element\\\">\\n        <slot \\n            name=\\\"errors\\\" \\n            id=\\\"error-messages-slot\\\">\\n        </slot>\\n        <slot \\n            name=\\\"hint\\\"\\n            id=\\\"hint-text-slot\\\">\\n        </slot>\\n    </div>\\n</div>\\n\";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://vanilla-web-components/./src/components/input/input.html?");

/***/ }),

/***/ "./src/components/input/input.scss":
/*!*****************************************!*\
  !*** ./src/components/input/input.scss ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `:host {\n  display: flex;\n  flex-direction: column;\n  min-width: 10rem;\n}\n:host *[class] {\n  position: relative;\n  font-family: inherit;\n  color: inherit;\n  box-sizing: border-box;\n}\n:host * {\n  -webkit-font-smoothing: antialiased;\n}\n\n.component-container {\n  display: flex;\n  flex-direction: column;\n}\n.component-container > .main-wrapper {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: auto;\n  background-color: var(--vwc-background-color, #fcfcfc);\n  border: 1px solid var(--vwc-border-color, #b4bdc6);\n  border-radius: 0.4rem;\n  margin: 0;\n  padding: 0.35rem 0;\n  padding-inline-start: 0rem;\n  padding-inline-end: 0rem;\n  transition: border 120ms ease-in-out, background-color 120ms ease-in-out;\n  z-index: 2;\n}\n.component-container > .main-wrapper > .inner-container {\n  width: 100%;\n  height: auto;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n}\n\n.icon-container {\n  display: flex;\n  align-items: stretch;\n  justify-content: stretch;\n}\n.icon-container > slot:is([name=leading-icon], [name=trailing-icon]) {\n  display: flex;\n  align-items: stretch;\n  justify-content: stretch;\n  min-width: 1rem;\n}\n.icon-container > slot:is([name=leading-icon], [name=trailing-icon])::slotted(span) {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  width: 2.5rem;\n  color: var(--vwc-icon-color, #a6a6ab);\n}\n.icon-container.trailing-icon {\n  text-decoration: none;\n}\n.icon-container.trailing-icon ::slotted(.success) {\n  color: var(--vwc-success-color, #68ff9d);\n}\n.icon-container.trailing-icon ::slotted(.info) {\n  color: var(--vwc-info-color, #69bffc);\n}\n.icon-container.trailing-icon ::slotted(.danger) {\n  color: var(--vwc-danger-color, #fd6868);\n}\n\n/* Mixins for host */\n/* Mixins for hints */\n.hints-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 0.2rem;\n  z-index: 1;\n  overflow: hidden;\n  /* height: .75rem; */\n}\n.hints-container:empty {\n  display: none;\n}\n.hints-container > slot {\n  display: inline-block;\n}\n.hints-container > slot[name=hint] {\n  font-size: 0.65rem;\n  color: var(--vwc-label-color, #b4bdc6);\n  font-weight: 300;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  transform: translateY(0);\n  opacity: 1;\n}\n:host(:is(:not([invalid]))) .hints-container > slot[name=hint] {\n  transform: translateY(0rem);\n  opacity: 1;\n}\n\n:host([invalid]) .hints-container > slot[name=hint] {\n  transform: translateY(-1rem);\n  opacity: 0;\n}\n\n.hints-container > slot[name=errors] {\n  font-size: 0.65rem;\n  color: var(--vwc-label-color, #b4bdc6);\n  font-weight: 300;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  transform: translateY(-1rem);\n  opacity: 0;\n}\n.hints-container > slot[name=errors]::slotted([hidden]) {\n  display: none !important;\n}\n.hints-container > slot[name=errors]::slotted(span) {\n  color: var(--vwc-danger-color, #fd6868);\n}\n:host(:is(:not([invalid]))) .hints-container > slot[name=errors] {\n  transform: translateY(-1rem);\n  opacity: 0;\n}\n\n:host([invalid]) .hints-container > slot[name=errors] {\n  transform: translateY(0rem);\n  opacity: 1;\n}\n\n/* Mixins for host */\n/* Mixins for hints */\n.component-container:focus-within .main-wrapper, .component-container.has-value .main-wrapper {\n  border: 1px solid var(--vwc-accent-color, #696cff);\n}\n:host(:is(:not([invalid]))) .component-container:focus-within .label-container > label, .component-container.has-value .label-container > label {\n  color: var(--vwc-accent-color, #696cff);\n}\n\n:host([invalid]) .component-container .main-wrapper {\n  border: 1px solid var(--vwc-danger-color, #fd6868);\n}\n\n:host(:is(:not([invalid]))) .component-container:hover .label-container > label {\n  color: var(--vwc-accent-color, #696cff);\n}\n\n.label-container {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n}\n.label-container > label {\n  width: 100%;\n  line-height: 1.2rem;\n  font-size: 1rem;\n  font-weight: 500;\n  color: var(--vwc-label-color, #b4bdc6);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transform: translateY(0.75rem);\n  transition: all 180ms ease-in-out;\n  transform-origin: 0% 100%;\n}\n:host([invalid]) .label-container > label {\n  color: var(--vwc-danger-color, #fd6868);\n}\n\n:host([invalid]) .icon-container slot[name=leading-icon]::slotted(span) {\n  color: var(--vwc-danger-color, #fd6868);\n}\n\n/** INPUT **/\n.input-container {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: stretch;\n}\n\ninput[type=text] {\n  width: 100%;\n  height: 2.4rem;\n  line-height: 2.4rem;\n  background-color: transparent;\n  color: inherit;\n  border: none;\n  outline: none;\n  font-size: 1rem;\n  border-radius: 0;\n  padding: 0;\n  font-weight: 400;\n  -webkit-tap-highlight-color: transparent;\n}\ninput[type=text]:hover, input[type=text]:focus, input[type=text]:active {\n  border: none;\n  outline: none;\n}\ninput[type=text]:placeholder-shown {\n  font-size: 1rem;\n  opacity: 0.75;\n  line-height: 1.2rem;\n  height: 1.4rem;\n}\n\n.has-label input[type=text] {\n  line-height: 1.4rem;\n  height: 1.6rem;\n}\n.has-label input[type=text]:placeholder-shown {\n  opacity: 0;\n  transition: opacity 180ms ease-in-out;\n}\n.has-label input[type=text]:focus:placeholder-shown {\n  opacity: 0.75;\n}\n\n.has-value .label-container > label,\n.component-container:focus-within .label-container > label {\n  transform: translateY(0) scale(0.8);\n}\n\n.initialized .hints-container > slot {\n  transition-property: transform, opacity;\n  transition: 180ms linear;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    \n\n//# sourceURL=webpack://vanilla-web-components/./src/components/input/input.scss?");

/***/ }),

/***/ "./src/components/input/input.js":
/*!***************************************!*\
  !*** ./src/components/input/input.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _input_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.html */ \"./src/components/input/input.html\");\n/* harmony import */ var _input_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./input.scss */ \"./src/components/input/input.scss\");\n\n\n\n/**\n * HTML template content.\n * @var {HTMLElement} template\n */\nconst template = document.createElement('template');\ntemplate.innerHTML = _input_html__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n/**\n * CSS classes.\n * @property {string} hasLabel    - Element has a label\n * @property {string} hasValue    - Input contains truly value\n * @property {string} init        - Element init completed\n * @property {string} pendingInit - Element not initialized yet\n * @readonly\n */\nconst CLASSES = {\n\thasLabel: 'has-label',\n\thasValue: 'has-value',\n\tpendingInit: 'pending-init',\n\tinitialized: 'initialized',\n};\n\n/**\n * All custom attributes.\n * @property {string} label       - Alias of label attr\n * @property {string} placeholder - Alias of placeholder attr\n * @property {string} value       - Alias of value attr\n * @readonly\n */\nconst ATTRS = {\n\tlabel: 'label',\n\tplaceholder: 'placeholder',\n\tvalue: 'value',\n};\n\n/**\n * All event aliases.\n * @property {string} change     - Alias of change event\n * @property {string} click      - Alias of click event\n * @property {string} slotChange - Alias of slot change event\n * @readonly\n */\nconst EVENTS = {\n\tchange: 'change',\n\tclick: 'click',\n\tslotChange: 'slotchange',\n};\n\n/**\n * Returns a <style> element with appended styles.\n * @param {string} cssText - CSS style sheet content.\n * @return {HTMLElement}\n */\nconst getStyleElement = function (cssText) {\n\tconst styleElement = document.createElement('style');\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = cssText;\n\t\treturn styleElement;\n\t}\n\tconst textNode = document.createTextNode(cssText);\n\tstyleElement.appendChild(textNode);\n\treturn styleElement;\n};\n\n/**\n * Custom text input element class. HTML tag is <vanilla-input>\n * @class\n * @extends {HTMLElement}\n * @constructor\n */\nclass VanillaInput extends HTMLElement {\n\t/**\n\t * Tag name of custom element.\n\t * @property {string} tagName\n\t * @static\n\t */\n\tstatic get tagName() {\n\t\treturn 'vanilla-input';\n\t}\n\n\t/**\n\t * ID #root-element in template.\n\t * @property {HTMLElement} $root\n\t * @public\n\t */\n\t$root;\n\n\t/**\n\t * ID #inner-container-element in template.\n\t * @property {HTMLElement} $innerContainer\n\t * @public\n\t */\n\t$innerContainer;\n\n\t/**\n\t * ID #input-element in template.\n\t * @property {HTMLElement} $input\n\t * @input\n\t */\n\t$input;\n\n\t/**\n\t * ID #label-container-element in template.\n\t * @property {HTMLElement} $labelContainer\n\t * @public\n\t */\n\t$labelContainer;\n\n\t/**\n\t * ID #label-element in template.\n\t * @property {HTMLElement} $label\n\t * @public\n\t */\n\t$label;\n\n\t/**\n\t * Getter method for input value.\n\t * @return {string}\n\t */\n\tget value() {\n\t\treturn this.$input.value || '';\n\t}\n\n\t/**\n\t * Setter method for input value.\n\t * @return {void}\n\t */\n\tset value(val) {\n\t\tif (this.$input) {\n\t\t\tthis.$input.value = val;\n\t\t}\n\t}\n\n\t/**\n\t * Getter method for label property.\n\t * @return {string}\n\t */\n\tget label() {\n\t\treturn this.getAttribute(ATTRS.label);\n\t}\n\n\t/**\n\t * Setter method for label property.\n\t * @param {string} value\n\t * @return {void}\n\t */\n\tset label(value) {\n\t\tthis.setAttribute(ATTRS.label, value);\n\t}\n\n\tstatic get observedAttributes() {\n\t\treturn Object.values(ATTRS);\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.attachShadow({ mode: 'open' });\n\t}\n\n\t/**\n\t * Invoked when change/update attributes that defined\n\t * at observedAttributes() function.\n\t *\n\t * @param {string} name     - Attribute name\n\t * @param {string} value    - Attribute current value\n\t * @param {string} newValue - Attribute updated value\n\t * @return {void}\n\t */\n\tattributeChangedCallback(name, value, newValue) {\n\t\tthis.changeAttributeValue(name, value, newValue);\n\t}\n\n\t/**\n\t * Helper function that called by init() and\n\t * attributeChangedCallback()\n\t *\n\t * @param {string} name     - Attribute name\n\t * @param {string} value    - Attribute current value\n\t * @param {string} newValue - Attribute updated value\n\t * @return {void}\n\t */\n\tchangeAttributeValue(name, value, newValue) {\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (name) {\n\t\t\tcase ATTRS.label:\n\t\t\t\t// Invoke when change value of label attr/property\n\t\t\t\tthis.updateLabelElement(newValue);\n\t\t\t\tbreak;\n\n\t\t\tcase ATTRS.value:\n\t\t\t\t// Dispatch change event with fake event object\n\t\t\t\tconst fakeEvent = new Event(EVENTS.change);\n\t\t\t\tthis.$input.setAttribute(name, newValue);\n\t\t\t\tthis.$input.dispatchEvent(fakeEvent);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis.$input.setAttribute(name, newValue);\n\t\t}\n\t}\n\n\tconnectedCallback() {\n\t\tthis.init();\n\t}\n\n\tdisconnectedCallback() {\n\t\tthis.$input.removeEventListener(\n\t\t\tEVENTS.change,\n\t\t\tthis._eventChangedInputValue.bind(this),\n\t\t);\n\t\tthis.$root.removeEventListener(\n\t\t\tEVENTS.click,\n\t\t\tthis._eventClickedToRoot.bind(this),\n\t\t);\n\t}\n\n\tinit() {\n\t\tconst clondedTemplate = template.content.cloneNode(true);\n\n\t\t// Access cloned DOM elements\n\t\tthis.$root = clondedTemplate.getElementById('root-element');\n\t\tthis.$innerContainer = clondedTemplate.getElementById(\n\t\t\t'inner-container-element',\n\t\t);\n\t\tthis.$input = clondedTemplate.getElementById('input-element');\n\t\tthis.$label = clondedTemplate.getElementById('label-element');\n\t\tthis.$labelContainer = clondedTemplate.getElementById(\n\t\t\t'label-container-element',\n\t\t);\n\t\tthis.$labelContainer.remove();\n\n\t\t// Bind all event listeners\n\t\tthis.$input.addEventListener(\n\t\t\tEVENTS.change,\n\t\t\tthis._eventChangedInputValue.bind(this),\n\t\t);\n\t\tthis.$root.addEventListener(\n\t\t\tEVENTS.click,\n\t\t\tthis._eventClickedToRoot.bind(this),\n\t\t);\n\n\t\tfor (const node of this.attributes) {\n\t\t\tthis.changeAttributeValue(node.name, node.value, node.value);\n\t\t}\n\n\t\t// Append styles to root element\n\t\tthis.shadowRoot.appendChild(getStyleElement(_input_scss__WEBPACK_IMPORTED_MODULE_1__[\"default\"]));\n\n\t\tthis.shadowRoot.appendChild(this.$root);\n\t\tthis.$root.classList.remove(CLASSES.pendingInit);\n\t\tthis.$root.classList.add(CLASSES.initialized);\n\t}\n\n\t/**\n\t * Update state of label container element.\n\t * If value is falsy remove label container\n\t * in root.\n\t *\n\t * @param {string} value - Label text value\n\t * @returns {void}\n\t */\n\tupdateLabelElement(value) {\n\t\tif (Boolean(value)) {\n\t\t\tthis.$root.classList.add(CLASSES.hasLabel);\n\t\t\tthis.$innerContainer.insertBefore(\n\t\t\t\tthis.$labelContainer,\n\t\t\t\tthis.$innerContainer.firstChild,\n\t\t\t);\n\n\t\t\tthis.$labelContainer = this.$innerContainer.querySelector(\n\t\t\t\t'#label-container-element',\n\t\t\t);\n\t\t\tthis.$label = this.$innerContainer.querySelector('#label-element');\n\t\t\tthis.$label.innerHTML = value;\n\t\t\treturn;\n\t\t}\n\t\tthis.$root.classList.remove(CLASSES.hasLabel);\n\t\tthis.$labelContainer.remove();\n\t}\n\n\t/**\n\t * Invoked when input value change.\n\t * If input has any content, add hasValue class\n\t * to container element.\n\t *\n\t * @param {Event} $event\n\t * @return {void}\n\t */\n\t_eventChangedInputValue($event) {\n\t\tconst value = $event.target.value;\n\t\tif (Boolean(value)) {\n\t\t\tthis.$root.classList.add(CLASSES.hasValue);\n\t\t\treturn;\n\t\t}\n\t\tthis.$root.classList.remove(CLASSES.hasValue);\n\t}\n\n\t/**\n\t * Invoked run when click to root element.\n\t * Focus to input element.\n\t *\n\t * @param {Event} $event\n\t * @return {void}\n\t */\n\t_eventClickedToRoot($event) {\n\t\t$event.preventDefault();\n\t\tthis.$input.focus();\n\t}\n}\n\nwindow.customElements.define(VanillaInput.tagName, VanillaInput);\n\n\n//# sourceURL=webpack://vanilla-web-components/./src/components/input/input.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/components/input/input.js");
/******/ 	
/******/ })()
;